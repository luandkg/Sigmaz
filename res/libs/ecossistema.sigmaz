import "ecologia.sigmaz";
package Ecossistema {
	external Populacao {
		define Organismos : int = 0;
	}

	struct Animal at Organismo {
		define nome : string = "";
		define idade : int = 0;
		mockiz Tipo : CelulaTipos = CelulaTipos :: EUCARIONTE;
		act setNome ( aNome : string ) {
			
		}

		act setIdade ( aIdade : int ) {
			
		}
		func getNome ( ) : string {
			
		}
		func getIdade ( ) : int {
			if ( true ) -> {
				if ( true ) -> {
					
					# def a : int = 0;
					
					#  def a : int = -1;
					
				}other ( true ) -> {
					
					#  def b : int = 0;
					
					# def b : int = -1;
					
				}others {
					
					#  def c : int = 0;
					
					# def c : int = -1;
					
				}
				
			}
			
		}

		act viver ( ) {
			
		}

		act morrer ( ) {
			
		}
		func alimentar ( comida : string ) : int {
			return 0;
		}
		
	}
	stages CelulaTipos -> {
		EUCARIONTE , PROCARIONTE 
	}

	struct Bacteria {
		mockiz Tipo : CelulaTipos = CelulaTipos :: PROCARIONTE;
	}
	model Organismo {
		define nome : string;
		define idade : int;
		mockiz Tipo : CelulaTipos;
		act viver ( );
		act morrer ( );
		func alimentar ( string ) : int;
	}

	struct Vegetal {
		define Pigmento : string = "Clorofila";
	}

	struct Planta with Vegetal at Organismo {
		define nome : string = "";
		define idade : int = 0;
		mockiz Tipo : CelulaTipos = CelulaTipos :: EUCARIONTE;
		init Planta ( ) -> Vegetal ( ) {
			
		}

		act setNome ( aNome : string ) {
			
		}

		act setIdade ( aIdade : int ) {
			
		}
		func getNome ( ) : string {
			
		}
		func getIdade ( ) : int {
			
		}

		act viver ( ) {
			
		}

		act morrer ( ) {
			
		}
		func alimentar ( comida : string ) : int {
			return 0;
		}
		
	}
	cast Contador {
		getter a : int -> {
			#return a;
		}
		setter b : int -> {
			#return b;
		}
		
	}
	type Celula {
		define Tipo : CelulaTipos = null;
		define Tamanho : int = 0;
		define Estagio : string = "";
		mockiz FORCA : int = 12;
	}
	type Dupla in ( T ) {
		define P1 : T = null;
		define P2 : T = null;
	}
	
}
package Fungos {
	refer Ecossistema;
	struct Fungo {
		mockiz Tipo : CelulaTipos = CelulaTipos :: EUCARIONTE;
		init Fungo ( ) {
			
		}
		
	}

	struct Saccharomyces with Fungo {
		init Saccharomyces ( ) -> Fungo ( ) {
			
		}
		
	}
	
}
