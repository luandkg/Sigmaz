operator == ( a : num , b : num ) : bool {
	def c : bool;
	invoke math -> operator_equal ( a , b ) :: c;
	return c;
}
operator !! ( a : num , b : num ) : bool {
	def c : bool;
	invoke math -> operator_not ( a , b ) :: c;
	return c;
}
operator == ( a : bool , b : bool ) : bool {
	def c : bool;
	invoke math -> operator_match ( a , b ) :: c;
	return c;
}
operator !! ( a : bool , b : bool ) : bool {
	def c : bool;
	invoke math -> operator_unmatch ( a , b ) :: c;
	return c;
}
operator == ( a : string , b : string ) : bool {
	def c : bool;
	invoke terminal -> operator_match ( a , b ) :: c;
	return c;
}
operator !! ( a : string , b : string ) : bool {
	def c : bool;
	invoke terminal -> operator_unmatch ( a , b ) :: c;
	return c;
}
operator ++ ( a : num , b : num ) : num {
	def c : num;
	invoke math -> operator_sum ( a , b ) :: c;
	return c;
}
operator -- ( a : num , b : num ) : num {
	def c : num;
	invoke math -> operator_sub ( a , b ) :: c;
	return c;
}
operator ** ( a : num , b : num ) : num {
	def c : num;
	invoke math -> operator_mux ( a , b ) :: c;
	return c;
}
operator // ( a : num , b : num ) : num {
	def c : num;
	invoke math -> operator_div ( a , b ) :: c;
	return c;
}
