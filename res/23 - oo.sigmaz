import "libs/lib.sigmaz";


call iniciar -> pular ( )  ;

act pular ( )  {
	DEBUG -> REGRESSIVE :: ALL  ;
	def p1 : Pessoa = init Pessoa ( )  ;
	p1 . setNome ( "Luan Alves Freitas")  ;
	p1 . setIdade ( 12 )  ;
	p1 . mostrar ( )  ;
	DEBUG -> REGRESSIVE :: ALL  ;
	def p2 : Pessoa = init Pessoa ( )  ;
	p2 . setNome ( "Ana Bucar Xord")  ;
	p2 . setIdade ( 12 )  ;
	p2 . mostrar ( )  ;
	def igual : bool = p1 . getIdade ( ) == p2 . getIdade ( )  ;
	def sacola1 : Sacola = init Sacola ( )  ;
	p1 . sacola = sacola1  ;
	#p1.sacola.aumentar ( 2 ); p1.sacola.mostrar ( );
	p1 . mostrar ( )  ;
	sacola1 . aumentar ( 2 )  ;
	p1 . sacola_aumentar ( )  ;
	p1 . sacola . aumentar ( 3 )  ;
	def gg : int = p1 . sacola . quantidade ( )  ;
	p1 . mostrar_detalhes ( )  ;
	def zz : int = sacola1 . someisso ( 2 , 2 )  ;
	def c : int = 30  ;
	def ss : int = somar ( 2 , 3 )  ;
}


struct Pessoa{

all:
    define nome : string = "";
    define idade : int = 0;

    define sacola : Sacola;

    act setNome(_nome : string)  {
         nome=_nome;
    }

    func getNome() : string {
        return nome;
    }

    act setIdade(_idade : int)  {
         idade=_idade;
    }

    func getIdade() : int {
        return idade;
    }

    act sacola_aumentar(){
        #sacola.aumentar(1);
    }

    act mostrar()  {

       DEBUG -> REGRESSIVE :: STACK;

    }

  act mostrar_detalhes(){

        println("");
        println(" PESSOA : ");
        println("    - Nome : ", nome);
        println("    - Idade : ", idade);

    }

}

struct Sacola {

all:
    define itens : int = 0;

    act aumentar( g : int)  {
         itens= somar(itens,g);
    }

    func quantidade() : int { return itens; }

    func getQuantidade() : int { return itens; }



   act mostrar()  {
DEBUG -> REGRESSIVE :: STACK;
    }

    act mostrar_detalhes(){

        println("");

        println(" SACOLA : ");
        println("    - Itens : ", itens);

    }

    act mostrar_struct(){

       DEBUG -> REGRESSIVE :: STACK;

    }

    func someisso(a:int,b:int) : int {
        return somar(a,b);
    }

}