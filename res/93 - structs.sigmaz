call StructsWithGeneric -> {


    def a1 : ATG >> (int,int) = init ATG () >> (int,int);

    def b : MMU >> (int,bool) = init MMU () >> (int,bool);

    def c : RRA >> (bool) = init RRA () >> (bool);

    def d : Complexo = init Complexo() ;

    def d1 : int = d.getTGU();

	DEBUG -> REGRESSIVE :: STACK;

}


struct ATG in (A,B) {

restrict:
    define TGU : A;
    define RCA : B;

all:
    func getTGU () : A {return TGU;}
    func getRCA () : B {return RCA;}


}

struct MMU in (S,R) with ATG >> (S,R) {

    init MMU() -> ATG() {}

}

struct RRA in (S) with ATG >> (S,int) {

    init RRA() -> ATG() {}

}

struct Complexo with ATG >> (int,int) {

    init Complexo() -> ATG() {}

}