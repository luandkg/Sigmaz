refer COISAS;
refer ESTRELAS;
call iniciar -> {
	def mID1 : num = Pessoa -> ID ( );
	def mID2 : num = Pessoa -> ID ( );
	def mLuz : num = Sol -> Luminosidade ( );
	invoke __COMPILER__ -> SHOW_GLOBAL ( ) :: STACK;
}
package ESTRELAS {
	struct Sol {
		extern : 
		define mLuz : num = 12.0;
		func Luminosidade ( ) : num {
			return mLuz;
		}
		
	}
	
}
package COISAS {
	struct Pessoa {
		extern : 
		define mID : num = 0.0;
		extern : 
		func ID ( ) : num {
			mID = somar_inteiro ( mID , 1.0 );
			return mID;
		}
		
	}
	
}
func somar_inteiro ( a : num , b : num ) : num {
	def c : num;
	invoke math -> operator_sum_num ( a , b ) :: c;
	invoke casting -> cast_integer_num ( c ) :: c;
	return c;
}
