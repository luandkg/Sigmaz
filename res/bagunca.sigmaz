
require "operadores.sigmaz";
require "terminal.sigmaz";
require "cast.sigmaz";

call iniciar -> conditionando();


act conditionando(){


    def a1 : num = 10;
    def a2 : num = 105;

    def a3 : bool = a1 == a2;
    def a4 : bool = a1 !! a2;


    def f : bool = igual(50==50,false);

    if(a1 == a2) -> {
        def a5 : num = 50;
    }

     if (a1==101) -> {
        moc ZAL : num = -12.5;

        # invoke __COMPILER__ -> SHOW_SCOPE () :: ALL;


      } other (f==false) -> {

          def oca : num = 0;

         # invoke __COMPILER__ -> SHOW_SCOPE () :: ALL;

     } other (a2==a1) -> {
            def g : num = 15;
           # invoke __COMPILER__ -> SHOW_SCOPE () :: ALL;

       } others {
                 def qualquer2 : num = 0;
               # invoke __COMPILER__ -> SHOW_SCOPE () :: ALL;

     }

    if(igual(a1==a2,a1==a2)) -> {

    }

        if (f) -> {

            if (12==5) -> {}

        }

    def aumentando : num = 0;



    while(f) -> {

            def cc : num = aumentando;
            aumentando=somar(aumentando,1);

            cc = dividir(cc,3);

            def cc2 : string = num_to_string(cc,2);

            println("Valor de CC : ",cc2);

            f = menor(aumentando,10);
            def b : bool = diferente(cc,5);

            def gb : bool = string_to_bool("true");
            #invoke __COMPILER__ -> SHOW_SCOPE () :: ALL;
    }




}

func igual(a:bool,b:bool) : bool {

return a;

}

